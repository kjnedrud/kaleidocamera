// units & sizes
$base-size: 20px;
$line-height: 1.5;

// colors
$blue: #38a1d1;
$blue-light: mix(#fff, $blue, 20%);
$blue-eggshell: mix(#fff, $blue, 50%);
$blue-grey: #2e3c61;
$red: #c11955;

// symbols
$arrow-up: '\2191';
$arrow-down: '\2193';
$arrow-left: '\2190';
$arrow-right: '\2192';
$x: '\2715';

/**
 * General Styles
 */

html, body {
	background: #161616;
	border: 0;
	color: #ccc;
	font-family: 'Open Sans', Arial, sans-serif;
	font-size: $base-size;
	height: 100%;
	line-height: $line-height;
	margin: 0;
	padding: 0;
	width: 100%;

	&.no-scroll {
		height: 100%;
		overflow: hidden;
	}
}

img {
	height: auto;
	max-width: 100%;

	a & {
		border: none;
	}
}

a {
	color: $blue;
	text-decoration: underline;

	&:focus, &:hover {
		color: $blue-light;
		text-decoration: underline;
	}

	&.arrow-up, &.arrow-down, &.arrow-left, &.arrow-right, &.x {
		white-space: nowrap;
	}

	&.arrow-up {
		&::before {
			content: $arrow-up;
			display: inline-block;
			margin-right: 0.25em;
		}
	}

	&.arrow-down {
		&::before {
			content: $arrow-down;
			display: inline-block;
			margin-right: 0.25em;
		}
	}

	&.arrow-left::before {
		content: $arrow-left;
		display: inline-block;
		margin-right: 0.25em;
	}

	&.arrow-right::after {
		content: $arrow-right;
		display: inline-block;
		margin-left: 0.25em;
	}

	&.x::before {
		content: $x;
		display: inline-block;
		margin-right: 0.25em;
	}

	&[download], &.download {
		@extend .arrow-down;
	}

	&.delete {
		@extend .x;
		color: $red;

		&:focus, &:hover {
			color: mix(#fff, $red, 10%);
		}
	}
}

b, strong {
	color: #fff;
}

p {
	margin-bottom: #{(3 - $line-height) / 2}em;
	margin-top: #{(3 - $line-height) / 2}em;
}

.container {
	box-sizing: border-box;
	max-width: 100%;
	margin: 0 auto;
	padding: 0 1em;
	width: 600px;
}

.clearfix {
	&::after {
		clear: both;
		content: '';
		display: block;
		height: 0;
		width: 100%;
	}
}

.hidden {
	display: none !important;
}

.text-small {
	font-size: 0.75em;
}

.text-big {
	font-size: 1.25em;
}

.text-left {
	text-align: left;
}

.text-right {
	text-align: left;
}

.text-center {
	text-align: center;
}

.header, .controls, .main, .overlay {
	font-size: 16px;
}

/**
 * Header
 */

.header {
	background: rgba($blue-grey, 0.5);
	border-bottom: 1px solid $blue-grey;
	margin-bottom: -1px;

	.logo {
		display: block;
		height: 45px;
		margin-left: -5px;
		width: 225px;
	}
}

/**
 * Main Content Area
 */

.main {
	display: flex;
	flex-direction: column;
	justify-content: center;
	text-align: center;
}

.circle-wrap {
	position: relative;

	.message {
		box-sizing: border-box;
		display: block;
		left: 50%;
		max-width: 100%;
		padding: 0 2em;
		position: absolute;
		text-align: center;
		top: 50%;
		transform: translate(-50%, -50%);
		width: 360px;

		.error {
			margin: 1em auto;
			width: 220px;
		}

		input[type="file"] {
			left: -9999px;
			position: absolute;
			visibility: hidden;

			+ label {
				border: 2px dashed #999;
				box-sizing: border-box;
				cursor: pointer;
				display: inline-block;
				margin: 1em auto;
				padding: 0.5em 1.5em;
				width: 100%;

				&:hover {
					border-color: $blue;
					color: #fff;
				}
			}
		}
	}
}

.circle {
	background: #333;
	border-radius: 50%;
	cursor: pointer;
	display: block;
	height: auto;
	overflow: hidden;
	margin: 0 auto;
	max-width: 100%;
	transition: filter 600ms;

	&.disabled {
		cursor: default;
		filter: blur(10px);
		margin: 60px auto; // offset by height of controls so it stays in same position when they are displayed
	}
}

// controls (top)
.controls {
	height: 40px;
	text-align: left;
	padding: 10px 0;
	white-space: nowrap;

	.container {
		display: grid;
		grid-column-gap: 20px;
		grid-template-columns: 1fr 3fr;
		justify-content: space-evenly;
	}
}

// camera controls (bottom)
.camera-controls {
	padding: 20px 0;

	.container {
		align-items: center;
		display: grid;
		grid-column-gap: 15px;
		grid-template-columns: 2fr 1fr 2fr;
		justify-content: space-evenly;
	}
}

.sources {
	display: grid;
	grid-column-gap: 15px;
	grid-template-columns: repeat(auto-fill, 40px);
}

.save {
	background: rgba(#fff, 0.2);
	border: 3px solid #ccc;
	border-radius: 50%;
	height: 60px;
	margin: 0 auto;
	width: 60px;

	&:hover {
		border-color: #fff;
	}

	&:focus {
		box-shadow: 0 0 2px 5px rgba($blue, 0.5);
		outline: none;
	}
}

.error {
	background: rgba(#600, 0.5);
	border: 1px solid #600;
	padding: 0.5em;
}

/**
 * Buttons and Form Controls
 */

%button {
	background: $blue-light;
	border: 0;
	border-radius: 2px;
	box-sizing: border-box;
	color: #000;
	cursor: pointer;
	display: inline-block;
	font-size: $base-size;
	line-height: 1;
	max-width: 100%;
	min-width: 2em;
	padding: 0.25em 0.5em;
	text-align: center;
	text-decoration: none;
	transition: background 200ms;

	&:focus, &:hover {
		color: #000;
		text-decoration: none;

		&:not([disabled]), &:not(.disabled) {
			background: $blue;
		}
	}

	&[disabled], &.disabled {
		cursor: default;
		opacity: 0.5;
	}

	&.big {
		font-size: $base-size * 1.5;
		font-size: 1.5rem;
		padding: 0.25em 1em;
		width: 100%;
	}

	&.loading {
		position: relative;

		&::after {
			background: #999;
			border-radius: 2px;
			bottom: 0;
			color: #666;
			content: 'Loading...';
			display: block;
			font-size: 0.75em;
			left: 0;
			line-height: #{(1.5 / 0.75)}em;
			position: absolute;
			right: 0;
			text-align: center;
			top: 0;
		}
	}
}

button, .button {
	@extend %button;
}

%input {
	background: #f1f1f1;
	border: 2px solid #666;
	border-radius: 2px;
	box-shadow: inset 2px 2px 2px rgba(#000, 0.2);
	box-sizing: border-box;
	color: #333;
	font-size: 1em;
	height: 30px;
	line-height: $line-height;
	margin: 0.25em 0;
	max-width: 100%;
	padding: 0.25em 0.5em;
	width: 100%;

	&:focus {
		border-color: $blue;
		box-shadow: inset 2px 2px 4px rgba(#000, 0.4);
		outline: none;
	}
}

input[type=text], .input {
	@extend %input;
}

textarea {
	@extend %input;
	height: 60px;
	min-height: $line-height * 1.5em;
	min-width: 100%;
}

select {
	@extend %input;
}

input[type=checkbox], input[type=radio] {
	float: left;
	margin: 0.5em;
}

// toggle checkbox
.toggle {
	left: -9999px;
	position: absolute;
	visibility: hidden;

	+ label {
		cursor: pointer;
		display: inline-block;
		height: 40px;
		padding-right: 35px;
		position: relative;

		&:before {
			background: #666;
			background: #999;
			border-radius: 7.5px;
			content: '';
			display: block;
			height: 15px;
			position: absolute;
			top: 12.5px;
			right: 0;
			width: 30px;
		}

		&:after {
			background: #ccc;
			background: #fff;
			border-radius: 50%;
			box-shadow: 0px 2px 2px rgba(#000, 0.2);
			content: '';
			display: block;
			height: 18px;
			position: absolute;
			right: 15px;
			top: 11px;
			width: 18px;
		}
	}

	&:checked {
		+ label {

			&:before {
				background: $blue-eggshell;
			}

			&:after {
				background: $blue;
				box-shadow: 0px 1px 2px rgba(#000, 0.5);
				right: 0px;
			}

		}
	}
}

label {
	font-weight: 700;
}

.icon {
	box-sizing: border-box;
	cursor: pointer;
	display: inline-block;
	height: 40px;
	overflow: hidden;
	width: 40px;
}

.svg-icon {
	fill: none;
	padding: 5px;
	stroke: #ccc;
	stroke-linecap: round;
	stroke-linejoin: round;
	stroke-width: 1.5;
	stroke-width: 2;

	&:hover {
		cursor: pointer;
	}
}

.camera-controls .svg-icon {
	&:hover {
		stroke: #fff;
	}
}

// custom range input
// note: each vendor-prefixed selector must be declared separately (otherwise browsers will ignore the entire block)

$range-option-count: 10;
$range-option-percent: 100% / ($range-option-count - 1);
$range-background-color: #999;
$range-background-color-focus: $blue-eggshell;
$range-hash-color: $blue;

@mixin range-thumb {
	background: #ccc;
	background: #fff;
	border: 0;
	border-radius: 50%;
	box-shadow: 0px 2px 2px rgba(#000, 0.5);
	height: 18px;
	margin-top: -8px;
	transition: background 200ms, box-shadow 200ms;
	width: 18px;
}

@mixin range-thumb-focus {
	background: $blue;
	box-shadow: 0px 2px 2px rgba(#000, 0.5);
	box-shadow: 0px 1px 2px rgba(#000, 0.5), 0 0 0 10px rgba($blue, 0.25);
}

@mixin range-track {
	background-color: $range-background-color;
	background-repeat: repeat-x;
	border-color: $range-background-color;
	border-radius: 3px;
	border-style: solid;
	border-width: 1px 0;
	height: 4px;
	transition: background 200ms, border 200ms, box-shadow 200ms;
	width: 100%;
}

@mixin range-track-focus {
	background-color: $blue-eggshell;
	// use background gradient to add hash marks
	background-image: repeating-linear-gradient(
		to right,
		$range-hash-color,
		$range-hash-color 2px,
		transparent 2px,
		transparent $range-option-percent
	);
	background-position: -1px 50%;
	border-color: $blue-eggshell;
	box-shadow: 0 0 0 1px $blue-eggshell;
}

input[type=range] {
	-webkit-appearance: none;
	background: none;
	border: 0;
	box-sizing: border-box;
	cursor: pointer;
	height: 40px;
	margin: 0;
	padding: 10px 0;
	width: 100%;

	// thumb
	&::-webkit-slider-thumb {
		-webkit-appearance: none;
		@include range-thumb;
	}
	&::-moz-range-thumb {
		@include range-thumb;
	}
	&::-ms-thumb {
		@include range-thumb;
	}

	// track
	&::-webkit-slider-runnable-track {
		@include range-track;
	}
	&::-moz-range-track {
		@include range-track;
	}
	&::-ms-range-track {
		@include range-track;
	}

	&:focus {
		outline: none;

		&::-webkit-slider-thumb {
			@include range-thumb-focus;
		}
		&::-moz-range-thumb {
			@include range-thumb-focus;
		}
		&::-ms-thumb {
			@include range-thumb-focus;
		}

		&::-webkit-slider-runnable-track {
			@include range-track-focus;
		}
		&::-moz-range-track {
			@include range-track-focus;
		}
		&::-ms-range-track {
			@include range-track-focus;
		}
	}

	&.input-sides {
		float: right;
		width: calc(100% - 40px);
	}

}


/**
 * Modal Overlay
 */

.overlay {
	background: rgba(#000, 0.5);
	bottom: 0;
	height: 100%;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	width: 100%;
	z-index: 100;

	.container {
		padding: 0;
	}

	.modal {
		background: #333;
		box-sizing: border-box;
		height: 100vh;
		margin: 0;
		overflow-y: auto;
		padding: 30px;
		position: relative;

		.close {
			color: #ccc;
			display: block;
			height: 40px;
			overflow: hidden;
			position: absolute;
			right: 5px;
			text-decoration: none;
			top: 5px;
			width: 40px;

			&:hover {
				color: #fff;
				text-decoration: none;

				.svg-icon {
					stroke: #fff;
				}
			}

		}
	}
}

.thumb {
	border-radius: 50%;
}

.img-viewer-open {
	background: rgba(#333, 0.5);
	border-radius: 50%;
	float: right;
	height: 44px; // 40 thumb + 4 border
	width: 44px; // 40 thumb + 4 border

	.thumb {
		border: 2px solid rgba(#fff, 0.25);
		cursor: pointer;

		&:hover {
			border-color: rgba(#fff, 0.5);
			border-color: $blue;
		}
	}
}

.img-viewer {
	display: flex;
	flex-direction: column;

	.img-main {
		flex-shrink: 1;

		.thumb {
			display: block;
			margin: 0 auto;
			width: auto;
		}
	}

	&.browse {

		#browse {
			display: block;
		}

		#share, #success {
			display: none;
		}

		.img-main .thumb {
			max-height: calc(100vh - #{(30px + 90px + 140px + 30px )}); // top padding + actions + thumbs + bottom padding
		}
	}

	&.share {

		#share {
			display: block;
		}

		#browse, #success {
			display: none;
		}

		.img-main .thumb {
			max-height: calc(100vh - #{30px + 200px + 30px}); // top padding + share + bottom padding
		}
	}

	&.success {

		#success {
			display: block;
		}

		#browse, #share {
			display: none;
		}

		.img-main .thumb {
			max-height: calc(100vh - #{30px + 230px + 30px}); // top padding + success + bottom padding
		}
	}

	.actions {
		margin: 30px 0;
	}

	.step-browse {
		flex-grow: 1;
		position: relative;
		min-height: 160px;
	}

	.thumbs {
		box-sizing: border-box;
		display: grid;
		flex-grow: 1;
		grid-gap: 20px;
		grid-template-columns: repeat(auto-fit, minmax(40px, 0.25fr));
		justify-content: space-evenly;
		padding: 5px; // extra padding so shadow on active thumb does not get cut off
		max-height: calc(100% - 90px); // step-browse height - 80px actions
		min-height: 140px; // 2.5 rows (40 row + 20 gap + 40 row + 20 gap + 20 half row)
		overflow-y: auto;
		position: absolute;
		width: 100%;

		.thumb {
			cursor: pointer;

			&.active {
				box-shadow: 0 0 0 2px rgba($blue, 0.8);
			}
		}
	}

	label {
		@extend .text-small;
	}

	.inline-items {

		> * {
			margin-right: 1em;
			&:last-child {
				margin-right: 0;
			}
		}

		&.text-center {
			margin-left: -0.5em;
			margin-right: -0.5em;

			> * {
				margin-left: 0.5em;
				margin-right: 0.5em;
			}
		}
	}

}
